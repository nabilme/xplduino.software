# makefile, written by guido socher
# Select your target chip:
#~ MCU=atmega168
MCU=attiny2313a
#~ DUDECPUTYPE=m168t2313
DUDECPUTYPE=t2313
F_CPU=8000000
# this specific circuit works also for atmega88 and family
# in general that is however not the case.
#MCU=atmega168
#DUDECPUTYPE=m168
#MCU=atmega88
#DUDECPUTYPE=m88
#MCU=atmega328p
#DUDECPUTYPE=m328
#

PROGRAMER=stk500v2
LOADCMD=avrdude -P /dev/ttyUSB0 -b 115200
LOADARG=-p $(DUDECPUTYPE) -c $(PROGRAMER) -e -v -U flash:w:
#
CC=avr-gcc
OBJCOPY=avr-objcopy
# optimize for size:
CFLAGS=-g -mmcu=$(MCU) -Wall -Wstrict-prototypes -Os -mcall-prologues
#-------------------
all: dimmer.hex
#-------------------
help: 
	@echo "Usage: make all|load|load_pre|rdfuses"
	@echo "The Makefile has also fuse settings for atmega8 in the code."
	@echo "Do not use those make targets for any other chip than atmega8."
	@echo "The atmega8 fuse targest are: wrfuse1mhz|wrfuse4mhz|wrfuse8mhz|wrfusecrystal"
	@echo "Warning: you will not be able to undo wrfusecrystal unless you connect an"
	@echo "         external crystal! The uC is dead after wrfusecrystal if you do"
	@echo "         not have an external crystal."
#-------------------
dimmer.hex : dimmer.out 
	avr-size dimmer.out
	$(OBJCOPY) -R .eeprom -O ihex dimmer.out dimmer.hex 
dimmer.out : dimmer.o 
	$(CC) $(CFLAGS) -o dimmer.out -Wl,-Map,dimmer.map dimmer.o 
dimmer.o : dimmer.c 
	$(CC) $(CFLAGS) -Os -c dimmer.c
#------------------
pre: dimmer.hex
	cp dimmer.hex dimmer.hex
#------------------
load: dimmer.hex
	$(LOADCMD) $(LOADARG)dimmer.hex
# here is a pre-compiled version in case you have trouble with
# your development environment
load_pre: dimmer.hex
	$(LOADCMD) $(LOADARG)dimmer.hex
#
#-------------------
# fuse byte settings:
#  Atmel AVR ATmega8 
#  Fuse Low Byte      = 0xe1 (1MHz internal), 0xe3 (4MHz internal), 0xe4 (8MHz internal)
#                       0xee external crystal
#  Fuse High Byte     = 0xd9 
#  Factory default is 0xe1 for low byte and 0xd9 for high byte
# Check this with make rdfuses
#
rdfuses:
	avrdude -p $(DUDECPUTYPE) -c $(PROGRAMER) -v -q
# use atmega8 internal RC oscillator 1 Mhz
wrfuse1mhz:
	avrdude -p  $(DUDECPUTYPE) -c $(PROGRAMER) -u -v -U lfuse:w:0xe1:m
# use internal RC oscillator 4 Mhz
wrfuse4mhz:
	avrdude -p  $(DUDECPUTYPE) -c $(PROGRAMER) -u -v -U lfuse:w:0xe3:m
wrfuse8mhz:
	avrdude -p  $(DUDECPUTYPE) -c $(PROGRAMER) -u -v -U lfuse:w:0xe4:m
# use external 3-8 Mhz crystal
# Warning: you can not reset this to intenal unless you connect a crystal!!
wrfusecrystal:
	@echo "Warning: The external crystal setting can not be changed back without a working crystal"
	@echo "         You have 3 seconds to abort this with crtl-c"
	@sleep 3
	avrdude -p  $(DUDECPUTYPE) -c $(PROGRAMER) -u -v -U lfuse:w:0xee:m
#-------------------
clean:
	rm -f *.o *.map *.out dimmer.hex
#-------------------
